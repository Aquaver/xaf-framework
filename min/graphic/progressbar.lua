local a=require("xaf/graphic/component")local b={C_NAME="Generic GUI Progress Bar",C_INSTANCE=true,C_INHERIT=true,static={LAYOUT_DEFAULT=0,LAYOUT_HORIZONTAL=1,LAYOUT_VERTICAL=2}}function b:initialize()local c=a:extend()local d=c and c.private or{}local e=c and c.public or{}d.currentValue=0;d.minimumValue=0;d.maximumValue=1;d.barLayout=0;d.horizontalParts={'▏','▎','▍','▌','▋','▊','▉','█'}d.horizontalParts[0]=' 'd.verticalParts={'▁','▂','▃','▄','▅','▆','▇','█'}d.verticalParts[0]=' 'e.getLayoutMode=function(self)return d.barLayout end;e.getValue=function(self)return d.currentValue end;e.set=function(self,f)assert(type(f)=="number","[XAF Graphic] Expected NUMBER as argument #1")if f<d.minimumValue then d.currentValue=d.minimumValue elseif f>d.maximumValue then d.currentValue=d.maximumValue else d.currentValue=f end;return true end;e.setLayoutMode=function(self,g)assert(type(g)=="number","[XAF Graphic] Expected NUMBER as argument #1")if g>=0 and g<=2 then if math.floor(g)==g and math.ceil(g)==g then d.barLayout=g else error("[XAF Error] Invalid progress bar layout mode - must be a integer")end else error("[XAF Error] Invalid progress bar layout mode")end;return true end;e.setValues=function(self,h,i,j)assert(type(h)=="number","[XAF Graphic] Expected NUMBER as argument #1")assert(type(i)=="number","[XAF Graphic] Expected NUMBER as argument #2")assert(type(j)=="number","[XAF Graphic] Expected NUMBER as argument #3")if h<i then d.minimumValue=h;d.maximumValue=i else error("[XAF Error] Minimum value must be lower than maximum")end;if j<h then d.currentValue=h elseif j>i then d.currentValue=i else d.currentValue=j end;return true end;e.refresh=function(self)local k=d.renderMode;e:setRenderMode(3)e:view()e:setRenderMode(k)return true end;e.view=function(self)local l=d.renderer;if l then local m=d.columns;local n=d.rows;local o=d.totalWidth;local p=d.totalHeight;local q=d.positionX;local r=d.positionY;local s=l.getBackground()local t=l.getForeground()local u=d.renderMode;if u<=1 then l.setBackground(d.colorBackground)l.setForeground(d.colorBorder)l.fill(q,r,o-1,1,'─')l.fill(q,r+p-1,o-1,1,'─')l.fill(q,r,1,p-1,'│')l.fill(q+o-1,r,1,p-1,'│')l.set(q,r,'┌')l.set(q+o-1,r,'┐')l.set(q,r+p-1,'└')l.set(q+o-1,r+p-1,'┘')end;if u<=2 then l.setBackground(d.colorBackground)l.fill(q+1,r+1,1,p-2,' ')l.fill(q+o-2,r+1,1,p-2,' ')end;if u<=3 then local v=d.minimumValue;local w=0;local x=d.maximumValue-v;local y=d.currentValue-v;local z=y/x;local A=(d.barLayout==0 or d.barLayout==1)and 8*m or 8*n;local B=z*A;local C=math.floor(B/8)local D=math.floor(B%8)l.setBackground(d.colorBackground)l.setForeground(d.colorContent)l.fill(q+2,r+1,m,n,' ')if d.barLayout==0 or d.barLayout==1 then l.fill(q+2,r+1,C,n,d.horizontalParts[8])if D>0 then l.fill(q+C+2,r+1,1,n,d.horizontalParts[D])end elseif d.barLayout==2 then l.fill(q+2,r+n-C+1,m,C,d.verticalParts[8])if D>0 then l.fill(q+2,r+n-C,m,1,d.verticalParts[D])end end end;l.setBackground(s)l.setForeground(t)return true else error("[XAF Error] Component GPU renderer has not been initialized")end end;return{private=d,public=e}end;function b:extend()local E=self:initialize()local d=E.private;local e=E.public;if self.C_INHERIT==true then return{private=d,public=e}else error("[XAF Error] Class '"..tostring(self.C_NAME).."' cannot be inherited")end end;function b:new(F,G,m,n,H)local E=self:initialize()local d=E.private;local e=E.public;e:setPosition(F,G)assert(type(m)=="number","[XAF Graphic] Expected NUMBER as argument #3")if math.floor(m)==m and math.ceil(m)==m and m>0 then d.columns=m else error("[XAF Error] Invalid columns number - must be a positive integer")end;assert(type(n)=="number","[XAF Graphic] Expected NUMBER as argument #4")if math.floor(n)==n and math.ceil(n)==n and n>0 then d.rows=n else error("[XAF Error] Invalid rows number - must be a positive integer")end;assert(type(H)=="number","[XAF Graphic] Expected NUMBER as argument #5")if H>=0 and H<=2 then if math.floor(H)==H and math.ceil(H)==H then d.barLayout=H else error("[XAF Error] Invalid bar layout mode - must be a integer")end else error("[XAF Error] Invalid bar layout mode")end;d.totalWidth=m+4;d.totalHeight=n+2;if self.C_INSTANCE==true then return e else error("[XAF Error] Class '"..tostring(self.C_NAME).."' cannot be instanced")end end;return b
