local a=require("xaf/graphic/component")local b=require("xaf/core/xafcore")local c=b:getMathInstance()local d={C_NAME="Generic GUI Progress Bar",C_INSTANCE=true,C_INHERIT=true,static={LAYOUT_DEFAULT=0,LAYOUT_HORIZONTAL=1,LAYOUT_VERTICAL=2}}function d:initialize()local e=a:extend()local f=e and e.private or{}local g=e and e.public or{}f.currentValue=0;f.minimumValue=0;f.maximumValue=1;f.barLayout=0;f.horizontalParts={'▏','▎','▍','▌','▋','▊','▉','█'}f.horizontalParts[0]=' 'f.verticalParts={'▁','▂','▃','▄','▅','▆','▇','█'}f.verticalParts[0]=' 'g.getLayoutMode=function(self)return f.barLayout end;g.getValue=function(self)return f.currentValue end;g.set=function(self,h)assert(type(h)=="number","[XAF Graphic] Expected NUMBER as argument #1")if h<f.minimumValue then f.currentValue=f.minimumValue elseif h>f.maximumValue then f.currentValue=f.maximumValue else f.currentValue=h end;return true end;g.setLayoutMode=function(self,i)assert(type(i)=="number","[XAF Graphic] Expected NUMBER as argument #1")if i>=0 and i<=2 then if c:checkInteger(i)==true then f.barLayout=i else error("[XAF Error] Invalid progress bar layout mode - must be an integer")end else error("[XAF Error] Invalid progress bar layout mode")end;return true end;g.setValues=function(self,j,k,l)assert(type(j)=="number","[XAF Graphic] Expected NUMBER as argument #1")assert(type(k)=="number","[XAF Graphic] Expected NUMBER as argument #2")assert(type(l)=="number","[XAF Graphic] Expected NUMBER as argument #3")if j<k then f.minimumValue=j;f.maximumValue=k else error("[XAF Error] Minimum value must be lower than maximum")end;if l<j then f.currentValue=j elseif l>k then f.currentValue=k else f.currentValue=l end;return true end;g.refresh=function(self)local m=f.renderMode;g:setRenderMode(3)g:view()g:setRenderMode(m)return true end;g.view=function(self)local n=f.renderer;if n then local o=f.columns;local p=f.rows;local q=f.totalWidth;local r=f.totalHeight;local s=f.positionX;local t=f.positionY;local u=n.getBackground()local v=n.getForeground()local w=f.renderMode;if w<=1 then n.setBackground(f.colorBackground)n.setForeground(f.colorBorder)n.fill(s,t,q-1,1,'─')n.fill(s,t+r-1,q-1,1,'─')n.fill(s,t,1,r-1,'│')n.fill(s+q-1,t,1,r-1,'│')n.set(s,t,'┌')n.set(s+q-1,t,'┐')n.set(s,t+r-1,'└')n.set(s+q-1,t+r-1,'┘')end;if w<=2 then n.setBackground(f.colorBackground)n.fill(s+1,t+1,1,r-2,' ')n.fill(s+q-2,t+1,1,r-2,' ')end;if w<=3 then local x=f.minimumValue;local y=0;local z=f.maximumValue-x;local A=f.currentValue-x;local B=A/z;local C=(f.barLayout==0 or f.barLayout==1)and 8*o or 8*p;local D=B*C;local E=math.floor(D/8)local F=math.floor(D%8)n.setBackground(f.colorBackground)n.setForeground(f.colorContent)n.fill(s+2,t+1,o,p,' ')if f.barLayout==0 or f.barLayout==1 then n.fill(s+2,t+1,E,p,f.horizontalParts[8])if F>0 then n.fill(s+E+2,t+1,1,p,f.horizontalParts[F])end elseif f.barLayout==2 then n.fill(s+2,t+p-E+1,o,E,f.verticalParts[8])if F>0 then n.fill(s+2,t+p-E,o,1,f.verticalParts[F])end end end;n.setBackground(u)n.setForeground(v)return true else error("[XAF Error] Component GPU renderer has not been initialized")end end;return{private=f,public=g}end;function d:extend()local G=self:initialize()local f=G.private;local g=G.public;if self.C_INHERIT==true then return{private=f,public=g}else error("[XAF Error] Class '"..tostring(self.C_NAME).."' cannot be inherited")end end;function d:new(H,I,o,p,J)local G=self:initialize()local f=G.private;local g=G.public;g:setPosition(H,I)assert(type(o)=="number","[XAF Graphic] Expected NUMBER as argument #3")if c:checkNatural(o,true)==true then f.columns=o else error("[XAF Error] Invalid columns number - must be a positive integer")end;assert(type(p)=="number","[XAF Graphic] Expected NUMBER as argument #4")if c:checkNatural(p,true)==true then f.rows=p else error("[XAF Error] Invalid rows number - must be a positive integer")end;assert(type(J)=="number","[XAF Graphic] Expected NUMBER as argument #5")if J>=0 and J<=2 then if c:checkInteger(J)==true then f.barLayout=J else error("[XAF Error] Invalid bar layout mode - must be a integer")end else error("[XAF Error] Invalid bar layout mode")end;f.totalWidth=o+4;f.totalHeight=p+2;if self.C_INSTANCE==true then return g else error("[XAF Error] Class '"..tostring(self.C_NAME).."' cannot be instanced")end end;return d
