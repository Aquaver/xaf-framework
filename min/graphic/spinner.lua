local a=require("xaf/graphic/component")local b=require("xaf/core/xafcore")local c=b:getMathInstance()local d={C_NAME="Generic GUI Spinner",C_INSTANCE=true,C_INHERIT=true,static={MODE_DEFAULT=0,MODE_COUNTER=1,MODE_ITERATOR=2}}function d:initialize()local e=a:extend()local f=e and e.private or{}local g=e and e.public or{}f.eventClick=nil;f.eventClickArguments={}f.eventScroll=nil;f.eventScrollArguments={}f.spinnerMode=0;f.contentIndex=1;f.contentLength=0;f.contentTable={}g.getValue=function(self)local h=f.contentIndex;local i=f.contentTable;local j=i[h]return j end;g.register=function(self,k)assert(type(k)=="table","[XAF Graphic] Expected TABLE as argument #1")if f.active==true then if k[1]=="touch"then local l=k[2]if l==f.renderer.getScreen()then local m=k[3]local n=k[4]local o=f.renderMode;if n==f.positionY+1 then local k=nil;local p={}if m==f.positionX+f.columns+4 then k=f.eventClick;p=f.eventClickArguments;if f.spinnerMode==d.static.MODE_ITERATOR then if f.contentIndex<f.contentLength then f.contentIndex=f.contentIndex+1 end else if f.contentIndex>1 then f.contentIndex=f.contentIndex-1 end end elseif m==f.positionX+f.columns+6 then k=f.eventClick;p=f.eventClickArguments;if f.spinnerMode==d.static.MODE_ITERATOR then if f.contentIndex>1 then f.contentIndex=f.contentIndex-1 end else if f.contentIndex<f.contentLength then f.contentIndex=f.contentIndex+1 end end end;g:setRenderMode(a.static.RENDER_CONTENT)g:view()g:setRenderMode(o)if k then return k(table.unpack(p))end end end elseif k[1]=="scroll"then local l=k[2]if l==f.renderer.getScreen()then local q=k[3]local r=k[4]local s=k[5]local o=f.renderMode;local t=0;local u=0;local v=0;local w=0;if o<=a.static.RENDER_ALL then t=f.positionX;u=f.positionY;v=f.positionX+f.totalWidth-1;w=f.positionY+f.totalHeight-1 elseif o<=a.static.RENDER_INSETS then t=f.positionX+1;u=f.positionY+1;v=f.positionX+f.totalWidth-2;w=f.positionY+f.totalHeight-2 elseif o<=a.static.RENDER_CONTENT then t=f.positionX+2;u=f.positionY+1;v=f.positionX+f.totalWidth-2;w=f.positionY+f.totalHeight-2 end;if q>=t and q<=v and(r>=u and r<=w)then local k=f.eventScroll;local p=f.eventScrollArguments;if f.spinnerMode==d.static.MODE_ITERATOR then if f.contentIndex>1 and s>0 then f.contentIndex=f.contentIndex-1 elseif f.contentIndex<f.contentLength and s<0 then f.contentIndex=f.contentIndex+1 end else if f.contentIndex>1 and s<0 then f.contentIndex=f.contentIndex-1 elseif f.contentIndex<f.contentLength and s>0 then f.contentIndex=f.contentIndex+1 end end;g:setRenderMode(a.static.RENDER_CONTENT)g:view()g:setRenderMode(o)if k then return k(table.unpack(p))end end end end end end;g.setCounter=function(self,x,y,z)assert(type(x)=="number","[XAF Graphic] Expected NUMBER as argument #1")assert(type(y)=="number","[XAF Graphic] Expected NUMBER as argument #2")assert(type(z)=="number","[XAF Graphic] Expected NUMBER as argument #3")local A=x;local B=y;local C=z;local D=1;if f.spinnerMode==d.static.MODE_DEFAULT or f.spinnerMode==d.static.MODE_COUNTER then if z<=0 then error("[XAF Error] Increment number must be positive")end;if A<B then f.contentTable={}f.contentIndex=1;f.contentValue=nil;f.contentLength=0;for E=A,B,C do f.contentTable[D]=E;f.contentLength=f.contentLength+1;D=D+1 end else error("[XAF Error] Minimum value must be lower than maximum")end else error("[XAF Error] Invalid spinner type - required DEFAULT or COUNTER")end;return true end;g.setIterator=function(self,i)assert(type(i)=="table","[XAF Graphic] Expected TABLE as argument #1")if f.spinnerMode==d.static.MODE_ITERATOR then f.contentTable={}f.contentIndex=1;f.contentValue=nil;f.contentLength=0;for F,G in pairs(i)do f.contentTable[F]=G;f.contentLength=f.contentLength+1 end else error("[XAF Error] Invalid spinner type - required ITERATOR")end;return true end;g.setOnClick=function(self,H,...)assert(type(H)=="function","[XAF Graphic] Expected FUNCTION as argument #1")local I=H;local J={...}f.eventClick=I;f.eventClickArguments=J;return true end;g.setOnScroll=function(self,H,...)assert(type(H)=="function","[XAF Graphic] Expected FUNCTION as argument #1")local I=H;local J={...}f.eventScroll=I;f.eventScrollArguments=J;return true end;g.setValue=function(self,K)assert(type(K)~="nil","[XAF Graphic] Expected ANYTHING as argument #1")local L=K;local M=nil;for F,G in pairs(f.contentTable)do if type(K)=="number"and type(G)=="number"then L=tostring(K)M=tostring(G)else L=K;M=G end;if M==L then f.contentIndex=F;f.contentValue=G;return true end end;return false end;g.view=function(self)local N=f.renderer;if N then local O=f.columns;local P=f.totalWidth;local Q=f.totalHeight;local R=f.positionX;local S=f.positionY;local T=N.getBackground()local U=N.getForeground()local o=f.renderMode;if o<=a.static.RENDER_ALL then N.setBackground(f.colorBackground)N.setForeground(f.colorBorder)N.fill(R,S,P-1,1,'─')N.fill(R,S+Q-1,P-1,1,'─')N.fill(R,S,1,Q-1,'│')N.fill(R+P-1,S,1,Q-1,'│')N.set(R,S,'┌')N.set(R+P-1,S,'┐')N.set(R,S+Q-1,'└')N.set(R+P-1,S+Q-1,'┘')N.set(R+O+3,S+1,'│')N.set(R+O+5,S+1,'│')N.set(R+O+3,S,'┬')N.set(R+O+5,S,'┬')N.set(R+O+3,S+2,'┴')N.set(R+O+5,S+2,'┴')end;if o<=a.static.RENDER_INSETS then N.setBackground(f.colorBackground)N.set(R+1,S+1,' ')N.set(R+O+2,S+1,' ')end;if o<=a.static.RENDER_CONTENT then local V=f.contentTable[f.contentIndex]local W=V==nil and''or tostring(V)N.setBackground(f.colorBackground)N.setForeground(f.colorContent)N.fill(R+2,S+1,O,1,' ')N.set(R+O+4,S+1,'⇩')N.set(R+O+6,S+1,'⇧')N.set(R+2,S+1,string.sub(W,1,O))end;N.setBackground(T)N.setForeground(U)return true else error("[XAF Error] Component GPU renderer has not been initialized")end end;return{private=f,public=g}end;function d:extend()local X=self:initialize()local f=X.private;local g=X.public;if self.C_INHERIT==true then return{private=f,public=g}else error("[XAF Error] Class '"..tostring(self.C_NAME).."' cannot be inherited")end end;function d:new(Y,Z,O,_)local X=self:initialize()local f=X.private;local g=X.public;g:setPosition(Y,Z)assert(type(O)=="number","[XAF Graphic] Expected NUMBER as argument #3")if c:checkNatural(O,true)==true then f.columns=O else error("[XAF Error] Invalid columns number - must be a positive integer")end;assert(type(_)=="number","[XAF Graphic] Expected NUMBER as argument #4")if _>=d.static.MODE_DEFAULT and _<=d.static.MODE_ITERATOR then if c:checkInteger(_)==true then f.spinnerMode=_ else error("[XAF Error] Invalid spinner mode - must be a integer")end else error("[XAF Error] Invalid spinner mode")end;f.totalWidth=O+8;f.totalHeight=3;if self.C_INSTANCE==true then return g else error("[XAF Error] Class '"..tostring(self.C_NAME).."' cannot be instanced")end end;return d
