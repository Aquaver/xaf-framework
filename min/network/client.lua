local a=require("event")local b=require("xaf/core/xafcore")local c=b:getSecurityInstance()local d={C_NAME="Abstract Network Client",C_INSTANCE=false,C_INHERIT=true,static={TIMEOUT_DEFAULT=10}}function d:initialize()local e=nil;local f=e and e.private or{}local g=e and e.public or{}f.componentModem=nil;f.targetAddress=''f.targetPort=1;f.timeout=d.static.TIMEOUT_DEFAULT;f.sendRawRequest=function(self,h,...)assert(type(h)=="string","[XAF Network] Expected STRING as argument #1")local i=_G._XAF._VERSION;local j=f.componentModem;local k=h;local l={...}local m=f.targetAddress;local n=f.targetPort;local o=f.timeout;if j then j.open(n)j.send(m,n,i,k,table.unpack(l))local p={a.pull(o,"modem_message")}j.close(n)local q=#p;local r=p[1]local s=p[2]local t=p[3]local u=p[4]local v=p[5]local w={}for x=7,q do table.insert(w,p[x])end;if r then if m==t and n==u then if s==j.address then local y=p[6]local z=w;return y,table.unpack(z)end end else return false,"Response Timeout"end else error("[XAF Error] Client network modem component has not been initialized")end end;g.getModem=function(self)return f.componentModem end;g.getTargetAddress=function(self)return f.targetAddress end;g.getTargetPort=function(self)return f.targetPort end;g.getTimeout=function(self)return f.timeout end;g.setModem=function(self,j)assert(type(j)=="table","[XAF Network] Expected TABLE as argument #1")if j.type=="modem"then f.componentModem=j else error("[XAF Error] Invalid network modem component")end;return true end;g.setTargetAddress=function(self,A)assert(type(A)=="string","[XAF Network] Expected STRING as argument #1")if c:isUuid(A)==true then f.targetAddress=A else error("[XAF Error] Invalid target address")end;return true end;g.setTargetPort=function(self,B)assert(type(B)=="number","[XAF Network] Expected NUMBER as argument #1")if B>=1 and B<=65535 then f.targetPort=B else error("[XAF Error] Invalid port number - must be a positive integer up to 65535")end;return true end;g.setTimeout=function(self,o)assert(type(o)=="number","[XAF Network] Expected NUMBER as argument #1")if o==-1 then f.timeout=math.huge else f.timeout=o end;return true end;return{private=f,public=g}end;function d:extend()local C=self:initialize()local f=C.private;local g=C.public;if self.C_INHERIT==true then return{private=f,public=g}else error("[XAF Error] Class '"..tostring(self.C_NAME).."' cannot be inherited")end end;function d:new()local C=self:initialize()local f=C.private;local g=C.public;if self.C_INSTANCE==true then return g else error("[XAF Error] Class '"..tostring(self.C_NAME).."' cannot be instanced")end end;return d
