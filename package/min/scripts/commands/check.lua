local a,b=...local c=require("component")local d=require("filesystem")local e=require("xaf/utility/httpstream")local f=require("xaf/core/xafcore")local g=f:getTableInstance()if b.h==true or b.help==true then print("-----------------------------------------------")print("-- Extensible Application Framework - Manual --")print("-----------------------------------------------")print("  >> NAME")print("    >> xaf check - Automated checking for update script")print()print("  >> SYNOPSIS")print("    >> xaf check")print("    >> xaf check [-h | --help]")print()print("  >> DESCRIPTION")print("    >> This program let the user check for package updates and notifies if it is available.")os.exit()end;if c.isAvailable("internet")==false then print("---------------------------------------------------")print("-- Extensible Application Framework - Controller --")print("---------------------------------------------------")print("  >> Internet card component is not available")print("  >> Checking for update procedure cannot be continued")os.exit()else print("---------------------------------------------------")print("-- Extensible Application Framework - Controller --")print("---------------------------------------------------")print("  >> Internet card component found")print("  >> Trying to connect to project repository...")end;local h="https://raw.githubusercontent.com/Aquaver/xaf-framework/"local i="master"local j="/package/package.info"local k="/aquaver.github.io/xaf-framework/package.info"local l=h..i..j;local m=c.getPrimary("internet")local n=e:new(m,l)if n.connect()==true then local o=d.open(k,'w')for p in n:getData()do o:write(p)end;n.disconnect()o:close()else print("    >> Cannot connect to project repository")print("    >> Try running 'xaf check' again")os.exit()end;local q=g:loadFromFile(k)local r=q.package_name;local s=q.package_stable;local t=q.package_version;local u=_G._XAF._VERSION;if t==u then print("    >> Installed package version is equal to latest version ("..u..')')print("    >> Thank you for keeping XAF up to date")else print("    >> New version detected (local: "..u..", remote: "..t..')')print("    >> Use 'xaf update "..t.."' to download and install this version")if s=="true"then print("      >> This version is marked as 'stable'")print("      >> All changes are fully backward compatible")elseif s=="false"then print("      >> Warning! This version is not marked as 'stable'")print("      >> You may experience some bugs in this software")else print("      >> Unknown release stage: '"..s.."'")print("      >> Please notify the author about that")print("      >> Thank you for your feedback")end end;if d.exists(k)==true then d.remove(k)print("    >> Package metadata file has been removed")print("    >> Update checking procedure has been finished")else print("    >> Package metadata file does not exist")print("    >> Update checking procedure has been finished")end
