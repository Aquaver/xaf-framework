local a,b=...local c=require("component")local d=require("event")local e=require("filesystem")local f=require("xaf/utility/httpstream")local g=require("xaf/utility/jsonparser")local h=require("unicode")local i=require("xaf/core/xafcore")local j=i:getMathInstance()local k=i:getTableInstance()local l=_G._XAF;local m=l and l._VERSION or''if b.h==true or b.help==true then print("----------------------------------")print("-- XAF Package Manager - Manual --")print("----------------------------------")print("  >> NAME")print("    >> xaf-pm package - Add-on packages management program")print()print("  >> SYNOPSIS")print("    >> xaf-pm package")print("    >> xaf-pm package [-a | --add] <identifier>")print("    >> xaf-pm package [-h | --help]")print("    >> xaf-pm package [-i | --info] <identifier>")print("    >> xaf-pm package [-l | --list] [page]")print("    >> xaf-pm package [-r | --remove] <identifier>")print()print("  >> DESCRIPTION")print("    >> This script allows the user XAF PM add-on packages management, like installation, uninstallation and retrieving information about specific package.")os.exit()end;if b.l==true or b.list==true or b.r==true or b.remove==true then local n="io.github.aquaver"local o="xaf-packages"if b.l==true or b.list==true then local p=a[1]local q=0;local r=0;local s=1;local t=10;local u=e.concat(n,o)local v=0;local w=0;if p==nil then q=1 elseif tonumber(p)==nil then print("--------------------------------------")print("-- XAF Package Manager - Controller --")print("--------------------------------------")print("  >> Invalid package list index value")print("  >> This value must be natural number (or empty as 1)")print("  >> Use 'xaf-pm package [-l | --list]' again with proper index")os.exit()else if j:checkNatural(tonumber(p),true)==false then print("--------------------------------------")print("-- XAF Package Manager - Controller --")print("--------------------------------------")print("  >> Invalid package list index value")print("  >> This value must be natural number (or empty as 1)")print("  >> Use 'xaf-pm package [-l | --list]' again with proper index")os.exit()else q=tonumber(p)s=(q-1)*10+1;t=(q-1)*10+10 end end;if e.exists(u)==false then print("--------------------------------------")print("-- XAF Package Manager - Controller --")print("--------------------------------------")print("  >> Cannot list XAF PM packages")print("  >> Unable to find master PM directory")print("  >> Missing directory name: "..o)else print("--------------------------------------")print("-- XAF Package Manager - Controller --")print("--------------------------------------")print("  >> Master PM directory found")print("  >> Listing installed PM add-on packages...")for x in e.list(u)do r=r+1;if string.sub(x,-1,-1)=='/'then x=string.sub(x,1,-2)end;if r>=s and r<=t then if e.exists(e.concat(u,x,"_config","package.info"))==true then print("    >> ["..r.."] "..x.." (valid PM package)")v=v+1;w=w+1 else print("    >> ["..r.."] "..x.." (unknown item - missing configuration file)")w=w+1 end end;if r==t+1 then print("  >> More packages on 'xaf-pm package [-l | --list] "..q+1 .."'")break end end;print("  >> Valid XAF PM packages found: "..v)print("  >> Total (also unknown) objects found: "..w)end elseif b.r==true or b.remove==true then local y=a[1]local z=''if y==nil then print("--------------------------------------")print("-- XAF Package Manager - Controller --")print("--------------------------------------")print("  >> Invalid package name for removal")print("  >> Use 'xaf-pm package [-r | --remove]' again with proper package name")os.exit()else z=e.concat(n,o,tostring(y))end;if e.exists(z)==false then print("--------------------------------------")print("-- XAF Package Manager - Controller --")print("--------------------------------------")print("  >> Package with entered name does not exist")print("  >> Use 'xaf-pm package [-r | --remove]' again with proper package name")os.exit()end;e.remove(z)print("--------------------------------------")print("-- XAF Package Manager - Controller --")print("--------------------------------------")print("  >> Successfully removed following XAF PM package: "..y)print("  >> This program could no longer be started via PM controller")print("  >> Another package with that name can be installed now")end;os.exit()end;if b.a==true or b.add==true or b.i==true or b.info==true then local n="io.github.aquaver"local A="xaf-framework"local o="xaf-packages"local B="data"local C="pm-source.info"local D=''local E=e.concat(n,A,B,C)local F={}local G=0;if e.exists(E)==true then F=k:loadFromFile(E)else print("--------------------------------------")print("-- XAF Package Manager - Controller --")print("--------------------------------------")print("  >> Cannot find the source repositories list file")print("  >> Reinstall XAF package or download this file manually")print("  >> Missing file name: "..C)os.exit()end;if c.isAvailable("internet")==false then print("--------------------------------------")print("-- XAF Package Manager - Controller --")print("--------------------------------------")print("  >> Internet card component is not available")print("  >> Package Manager cannot connect to target repository")os.exit()else print("--------------------------------------")print("-- XAF Package Manager - Controller --")print("--------------------------------------")print("  >> Internet card component found")print("  >> Trying to connect to target repository...")end;if b.a==true or b.add==true then local H="pm-update.info"local I=e.concat(n,A,B,H)local J=nil;local K=a[1]local L=string.find(tostring(K),'/')local M=L and string.sub(tostring(K),1,L-1)local y=L and string.sub(tostring(K),L+1,-1)or''local N=nil;if K==nil or L==nil then print("    >> Invalid package identifier, must not be empty")print("    >> Required format: categoryName/packageName")os.exit()else print("    >> Searching for following package: "..K)end;if e.exists(e.concat(n,o,y))==true then print("    >> Package with name '"..y.."' is already installed")print("    >> Remove it first with 'xaf-pm remove' before installing this one")print("    >> Installation procedure has been interrupted")os.exit()end;if e.exists(I)==true then J=k:loadFromFile(I)else print("--------------------------------------")print("-- XAF Package Manager - Controller --")print("--------------------------------------")print("  >> Cannot find the package source list file")print("  >> Reinstall XAF package or download this file manually")print("  >> Missing file name: "..H)os.exit()end;for O,P in k:sortByKey(F,false)do local Q="https://api.github.com/repos/"local R="/git/trees/master"local S="?recursive=1"local T=false;print("    >> Checking repository: "..P)local U=Q..P..R..S;local V=c.getPrimary("internet")local W=f:new(V,U)if W:connect()==true then local X=''local Y=nil;local Z={}for _ in W:getData()do X=X.._ end;W:disconnect()Y=g:new()Z=Y:parse(X)for a0=1,#Z["tree"]do if Z["tree"][a0]["path"]==K then T=true;print("      >> Package '"..K.."' found on repository: "..P)print("      >> Would you like to install it from this source?")print("      >> Hit 'Y' to confirm, or 'N' to skip this repository")while true do local a1={d.pull("key_down")}if a1[3]==89 then print("        >> Installation confirmed, continuing...")N=P;D=Z["tree"][a0]["url"]U=Z["tree"][a0]["url"]W=f:new(V,U)if W:connect()==true then X=''Z={}for _ in W:getData()do X=X.._ end;W:disconnect()Z=Y:parse(X)if#Z["tree"]==2 and Z["tree"][1]["path"]=="_bin"and Z["tree"][2]["path"]=="_config"then local a2="https://raw.githubusercontent.com/"local a3="_config/repository.info"local a4="/master/"U=a2 ..P..a4 ..a3;W=f:new(V,U)if W:connect()==true then local a5=''local a6={}for _ in W:getData()do a5=a5 .._ end;a6=k:loadFromString(a5)a5=''if m>a6["repository-xaf"]then local a7="https://raw.githubusercontent.com/"local a8="/_config/package.info"local a9="/master/"U=a7 ..P..a9 ..K..a8;W=f:new(V,U)if W:connect()==true then local aa=''local ab={}for _ in W:getData()do aa=aa.._ end;ab=k:loadFromString(aa)aa=''if ab["package-description"]and ab["package-identifier"]and ab["package-index"]and ab["package-owner"]and ab["package-title"]and ab["package-version"]and ab["package-xaf"]then if y==ab["package-identifier"]then if m>ab["package-xaf"]then print("        >> Installing package '"..K.."' from repository: "..P)print("        >> All prerequisites have been checked")print("        >> Starting installation procedure...")U=D..S;W=f:new(V,U)if W:connect()==true then X=''Z={}for _ in W:getData()do X=X.._ end;W:disconnect()Z=Y:parse(X)for ac=1,#Z["tree"]do local ad=Z["tree"][ac]["path"]local ae=Z["tree"][ac]["type"]local n="io.github.aquaver"local A="xaf-packages"if ae=="tree"then e.makeDirectory(e.concat(n,A,y,ad))elseif ae=="blob"then local af=e.concat(n,A,y,ad)local ag=nil;local ah=-1;U=a7 ..P..a9 ..K..'/'..ad;W=f:new(V,U)print("          >> Trying to download: "..y..'/'..ad)if W:connect()==true then ag=e.open(af,'w')ah=0;for _ in W:getData()do ag:write(_)ah=ah+h.wlen(_)end;G=G+ah;ag:close()print("            >> Downloaded file: "..y..'/'..ad.." ("..string.format("%.2f",ah/1024).." kB)")else print("            >> Cannot download '"..y..'/'..ad.."' file")end end end;local ai=e.open(I,'w')local aj=y;local ak=N..':'..M;ai:write("[#] Extensible Application Framework Package Manager application source."..'\n')ai:write("[#] This file stores specific packages source identifiers which are used in updating."..'\n')ai:write("[#] Data represented in XAF Table Format."..'\n'..'\n')ai:close()J[aj]=ak;k:saveToFile(J,I,true)print("              >> Successfully downloaded package '"..K.."' from repository: "..P)print("              >> Downloaded package total size: "..string.format("%.2f",G/1024).." kB")print("              >> Installation procedure has been finished")print("              >> You can now use 'xaf-pm run "..y.."' to start the program")os.exit()else print("          >> Cannot connect to package installation content tree")print("          >> Ensure you have not lost internet access")print("          >> Installation procedure has been interrupted")os.exit()end else print("        >> This package requires newer XAF version ("..ab["package-xaf"]..')')print("        >> Detected local API version: "..m)print("        >> Please update XAF via 'xaf update' before package installation")print("        >> Installation procedure has been interrupted")os.exit()end else print("        >> Package identifier mismatch detected")print("        >> Identifier from configuration file and package directory name must be equal")print("        >> This package cannot be installed")os.exit()end else print("        >> Invalid package description file detected")print("        >> If this message appears again, contact the package owner")print("        >> Installation procedure has been interrupted")os.exit()end else print("        >> Cannot retrieve package description file")print("        >> Ensure you have not lost internet access")print("        >> Installation procedure has been interrupted")os.exit()end else print("        >> Repository '"..P.."' forces requirement to have newer XAF version")print("        >> Detected local API version: "..m.." (required by repository is: "..a6["repository-xaf"]..')')print("        >> Please update XAF via 'xaf update' before installing from this repository")print("        >> Installation procedure has been interrupted")os.exit()end else print("        >> Cannot retrieve repository description file")print("        >> Ensure you have not lost internet access")print("        >> Installation procedure has been interrupted")os.exit()end else print("        >> Invalid XAF PM package structure")print("        >> Encountered unexpected files in package master directory")print("        >> This package cannot be installed")os.exit()end else print("        >> Cannot connect to package content tree...")print("        >> Ensure you have not lost internet access")print("        >> Installation procedure has been interrupted")os.exit()end elseif a1[3]==78 then print("        >> Skipped the following repository: "..P)break end end end end else print("      >> Cannot connect to '"..P.."' repository")print("      >> Ensure you have not lost internet access")end;if T==false then print("      >> Cannot find package '"..K.."' on repository: "..P)end end elseif b.i==true or b.info==true then local K=a[1]local L=string.find(tostring(K),'/')local y=L and string.sub(tostring(K),L+1,-1)or''if K==nil or L==nil then print("    >> Invalid package identifier, must not be empty")print("    >> Required format: categoryName/packageName")os.exit()else print("    >> Searching for following package: "..K)end;for O,P in k:sortByKey(F,false)do local Q="https://api.github.com/repos/"local R="/git/trees/master"local S="?recursive=1"print("    >> Checking repository: "..P)local U=Q..P..R..S;local V=c.getPrimary("internet")local W=f:new(V,U)if W:connect()==true then local X=''local Y=nil;local Z={}for _ in W:getData()do X=X.._ end;W:disconnect()Y=g:new()Z=Y:parse(X)for a0=1,#Z["tree"]do if Z["tree"][a0]["path"]==K then U=Z["tree"][a0]["url"]W=f:new(V,U)if W:connect()==true then X=''Z={}for _ in W:getData()do X=X.._ end;W:disconnect()Z=Y:parse(X)if#Z["tree"]==2 and Z["tree"][1]["path"]=="_bin"and Z["tree"][2]["path"]=="_config"then local a7="https://raw.githubusercontent.com/"local a8="/_config/package.info"local a9="/master/"U=a7 ..P..a9 ..K..a8;W=f:new(V,U)if W:connect()==true then local aa=''local ab={}for _ in W:getData()do aa=aa.._ end;ab=k:loadFromString(aa)aa=''if ab["package-description"]and ab["package-identifier"]and ab["package-index"]and ab["package-owner"]and ab["package-title"]and ab["package-version"]and ab["package-xaf"]then if y==ab["package-identifier"]then print("      >> Successfully found information data of package: "..K)print("      >> This package exists on repository: "..P)print("        >> Package title: "..ab["package-title"])print("        >> Package owner: "..ab["package-owner"])print("        >> Package version: "..ab["package-version"])print("        >> Package required XAF version: "..ab["package-xaf"])print(string.rep('-',gpuWidth))print(ab["package-description"])os.exit()else print("      >> Package identifier mismatch detected")print("      >> Identifier from configuration file and package directory name must be equal")print("      >> This package cannot be installed")end else print("      >> Invalid package description file detected")print("      >> If this message appears again, contact the package owner")end else print("      >> Cannot retrieve package description file")print("      >> Ensure you have not lost internet access")end else print("      >> Invalid XAF PM package structure")print("      >> Encountered unexpected files in package master directory")print("      >> This package cannot be installed")end else print("      >> Cannot connect to package content tree...")print("      >> Ensure you have not lost internet access")end end end else print("      >> Cannot connect to '"..P.."' repository")print("      >> Ensure you have not lost internet access")end;print("      >> Cannot find package '"..K.."' on repository: "..P)end end;os.exit()end;print("--------------------------------------")print("-- XAF Package Manager - Controller --")print("--------------------------------------")print("  >> Add-on package management program")print("  >> Use 'xaf-pm package [-h | --help]' for command manual")
