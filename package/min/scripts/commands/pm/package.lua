local a,b=...local c=require("component")local d=require("event")local e=require("filesystem")local f=require("xaf/utility/httpstream")local g=require("xaf/utility/jsonparser")local h=require("unicode")local i=require("xaf/core/xafcore")local j=i:getMathInstance()local k=i:getTableInstance()local l=_G._XAF;local m=l and l._VERSION or''local n=c.getPrimary("gpu")local o,p=n.getResolution()if b.h==true or b.help==true then print("----------------------------------")print("-- XAF Package Manager - Manual --")print("----------------------------------")print("  >> NAME")print("    >> xaf-pm package - Add-on packages management program")print()print("  >> SYNOPSIS")print("    >> xaf-pm package")print("    >> xaf-pm package [-a | --add] <identifier>")print("    >> xaf-pm package [-h | --help]")print("    >> xaf-pm package [-i | --info] <identifier>")print("    >> xaf-pm package [-l | --list] [page]")print("    >> xaf-pm package [-r | --remove] <identifier>")print()print("  >> DESCRIPTION")print("    >> This script allows the user XAF PM add-on packages management, like installation, uninstallation and retrieving information about specific package.")os.exit()end;if b.l==true or b.list==true or b.r==true or b.remove==true then local q="aquaver.github.io"local r="xaf-packages"if b.l==true or b.list==true then local s=a[1]local t=0;local u=0;local v=1;local w=10;local x=e.concat(q,r)local y=0;local z=0;if s==nil then t=1 elseif tonumber(s)==nil then print("--------------------------------------")print("-- XAF Package Manager - Controller --")print("--------------------------------------")print("  >> Invalid package list index value")print("  >> This value must be natural number (or empty as 1)")print("  >> Use 'xaf-pm package [-l | --list]' again with proper index")os.exit()else if j:checkNatural(tonumber(s),true)==false then print("--------------------------------------")print("-- XAF Package Manager - Controller --")print("--------------------------------------")print("  >> Invalid package list index value")print("  >> This value must be natural number (or empty as 1)")print("  >> Use 'xaf-pm package [-l | --list]' again with proper index")os.exit()else t=tonumber(s)v=(t-1)*10+1;w=(t-1)*10+10 end end;if e.exists(x)==false then print("--------------------------------------")print("-- XAF Package Manager - Controller --")print("--------------------------------------")print("  >> Cannot list XAF PM packages")print("  >> Unable to find master PM directory")print("  >> Missing directory name: "..r)else print("--------------------------------------")print("-- XAF Package Manager - Controller --")print("--------------------------------------")print("  >> Master PM directory found")print("  >> Listing installed PM add-on packages...")for A in e.list(x)do u=u+1;if string.sub(A,-1,-1)=='/'then A=string.sub(A,1,-2)end;if u>=v and u<=w then if e.exists(e.concat(x,A,"_config","package.info"))==true then print("    >> ["..u.."] "..A.." (valid PM package)")y=y+1;z=z+1 else print("    >> ["..u.."] "..A.." (unknown item - missing configuration file)")z=z+1 end end;if u==w+1 then print("  >> More packages on 'xaf-pm package [-l | --list] "..t+1 .."'")break end end;print("  >> Valid XAF PM packages found: "..y)print("  >> Total (also unknown) objects found: "..z)end elseif b.r==true or b.remove==true then local B=a[1]local C=''if B==nil then print("--------------------------------------")print("-- XAF Package Manager - Controller --")print("--------------------------------------")print("  >> Invalid package name for removal")print("  >> Use 'xaf-pm package [-r | --remove]' again with proper package name")os.exit()else C=e.concat(q,r,tostring(B))end;if e.exists(C)==false then print("--------------------------------------")print("-- XAF Package Manager - Controller --")print("--------------------------------------")print("  >> Package with entered name does not exist")print("  >> Use 'xaf-pm package [-r | --remove]' again with proper package name")os.exit()end;e.remove(C)print("--------------------------------------")print("-- XAF Package Manager - Controller --")print("--------------------------------------")print("  >> Successfully removed following XAF PM package: "..B)print("  >> This program could no longer be started via PM controller")print("  >> Another package with that name can be installed now")end;os.exit()end;if b.a==true or b.add==true or b.i==true or b.info==true then local q="aquaver.github.io"local D="xaf-framework"local r="xaf-packages"local E="data"local F="pm-source.info"local G=''local H=e.concat(q,D,E,F)local I={}local J=0;if e.exists(H)==true then I=k:loadFromFile(H)else print("--------------------------------------")print("-- XAF Package Manager - Controller --")print("--------------------------------------")print("  >> Cannot find the source repositories list file")print("  >> Reinstall XAF package or download this file manually")print("  >> Missing file name: "..F)os.exit()end;if c.isAvailable("internet")==false then print("--------------------------------------")print("-- XAF Package Manager - Controller --")print("--------------------------------------")print("  >> Internet card component is not available")print("  >> Package Manager cannot connect to target repository")os.exit()else print("--------------------------------------")print("-- XAF Package Manager - Controller --")print("--------------------------------------")print("  >> Internet card component found")print("  >> Trying to connect to target repository...")end;if b.a==true or b.add==true then local K=a[1]local L=string.find(tostring(K),'/')local B=L and string.sub(tostring(K),L+1,-1)or''if K==nil or L==nil then print("    >> Invalid package identifier, must not be empty")print("    >> Required format: categoryName/packageName")os.exit()else print("    >> Searching for following package: "..K)end;if e.exists(e.concat(q,r,B))==true then print("    >> Package with name '"..B.."' is already installed")print("    >> Remove it first with 'xaf-pm remove' before installing this one")print("    >> Installation procedure has been interrupted")os.exit()end;for M,N in k:sortByKey(I,false)do local O="https://api.github.com/repos/"local P="/git/trees/master"local Q="?recursive=1"local R=false;print("    >> Checking repository: "..N)local S=O..N..P..Q;local T=c.getPrimary("internet")local U=f:new(T,S)if U:connect()==true then local V=''local W=nil;local X={}for Y in U:getData()do V=V..Y end;U:disconnect()W=g:new()X=W:parse(V)for Z=1,#X["tree"]do if X["tree"][Z]["path"]==K then R=true;print("      >> Package '"..K.."' found on repository: "..N)print("      >> Would you like to install it from this source?")print("      >> Hit 'Y' to confirm, or 'N' to skip this repository")while true do local _={d.pull("key_down")}if _[3]==89 then print("        >> Installation confirmed, continuing...")G=X["tree"][Z]["url"]S=X["tree"][Z]["url"]U=f:new(T,S)if U:connect()==true then V=''X={}for Y in U:getData()do V=V..Y end;U:disconnect()X=W:parse(V)if#X["tree"]==2 and X["tree"][1]["path"]=="_bin"and X["tree"][2]["path"]=="_config"then local a0="https://raw.githubusercontent.com/"local a1="_config/repository.info"local a2="/master/"S=a0 ..N..a2 ..a1;U=f:new(T,S)if U:connect()==true then local a3=''local a4={}for Y in U:getData()do a3=a3 ..Y end;local a5="/aquaver.github.io/xaf-framework/repository.info"local a6=e.open(a5,'w')a6:write(a3)a6:close()a4=k:loadFromFile(a5)e.remove(a5)if m>a4["repository-xaf"]then local a7="https://raw.githubusercontent.com/"local a8="/_config/package.info"local a9="/master/"S=a7 ..N..a9 ..K..a8;U=f:new(T,S)if U:connect()==true then local aa=''local ab={}for Y in U:getData()do aa=aa..Y end;local ac="/aquaver.github.io/xaf-framework/package.info"local ad=e.open(ac,'w')ad:write(aa)ad:close()ab=k:loadFromFile(ac)e.remove(ac)if ab["package-description"]and ab["package-identifier"]and ab["package-index"]and ab["package-owner"]and ab["package-title"]and ab["package-version"]and ab["package-xaf"]then if B==ab["package-identifier"]then if m>ab["package-xaf"]then print("        >> Installing package '"..K.."' from repository: "..N)print("        >> All prerequisites have been checked")print("        >> Starting installation procedure...")S=G..Q;U=f:new(T,S)if U:connect()==true then V=''X={}for Y in U:getData()do V=V..Y end;U:disconnect()X=W:parse(V)for ae=1,#X["tree"]do local af=X["tree"][ae]["path"]local ag=X["tree"][ae]["type"]local q="aquaver.github.io"local D="xaf-packages"if ag=="tree"then e.makeDirectory(e.concat(q,D,B,af))elseif ag=="blob"then local ah=e.concat(q,D,B,af)local ai=nil;local aj=-1;S=a7 ..N..a9 ..K..'/'..af;U=f:new(T,S)print("          >> Trying to download: "..B..'/'..af)if U:connect()==true then ai=e.open(ah,'w')aj=0;for Y in U:getData()do ai:write(Y)aj=aj+h.wlen(Y)end;J=J+aj;ai:close()print("            >> Downloaded file: "..B..'/'..af.." ("..string.format("%.2f",aj/1024).." kB)")else print("            >> Cannot download '"..B..'/'..af.."' file")end end end;print("              >> Successfully downloaded package '"..K.."' from repository: "..N)print("              >> Downloaded package total size: "..string.format("%.2f",J/1024).." kB")print("              >> Installation procedure has been finished")print("              >> You can now use 'xaf-pm run "..B.."' to start the program")os.exit()else print("          >> Cannot connect to package installation content tree")print("          >> Ensure you have not lost internet access")print("          >> Installation procedure has been interrupted")os.exit()end else print("        >> This package requires newer XAF version ("..ab["package-xaf"]..')')print("        >> Detected local API version: "..m)print("        >> Please update XAF via 'xaf update' before package installation")print("        >> Installation procedure has been interrupted")os.exit()end else print("        >> Package identifier mismatch detected")print("        >> Identifier from configuration file and package directory name must be equal")print("        >> This package cannot be installed")os.exit()end else print("        >> Invalid package description file detected")print("        >> If this message appears again, contact the package owner")print("        >> Installation procedure has been interrupted")os.exit()end else print("        >> Cannot retrieve package description file")print("        >> Ensure you have not lost internet access")print("        >> Installation procedure has been interrupted")os.exit()end else print("        >> Repository '"..N.."' forces requirement to have newer XAF version")print("        >> Detected local API version: "..m.." (required by repository is: "..a4["repository-xaf"]..')')print("        >> Please update XAF via 'xaf update' before installing from this repository")print("        >> Installation procedure has been interrupted")os.exit()end else print("        >> Cannot retrieve repository description file")print("        >> Ensure you have not lost internet access")print("        >> Installation procedure has been interrupted")os.exit()end else print("        >> Invalid XAF PM package structure")print("        >> Encountered unexpected files in package master directory")print("        >> This package cannot be installed")os.exit()end else print("        >> Cannot connect to package content tree...")print("        >> Ensure you have not lost internet access")print("        >> Installation procedure has been interrupted")os.exit()end elseif _[3]==78 then print("        >> Skipped the following repository: "..N)break end end end end else print("      >> Cannot connect to '"..N.."' repository")print("      >> Ensure you have not lost internet access")end;if R==false then print("      >> Cannot find package '"..K.."' on repository: "..N)end end elseif b.i==true or b.info==true then local K=a[1]local L=string.find(tostring(K),'/')local B=L and string.sub(tostring(K),L+1,-1)or''if K==nil or L==nil then print("    >> Invalid package identifier, must not be empty")print("    >> Required format: categoryName/packageName")os.exit()else print("    >> Searching for following package: "..K)end;for M,N in k:sortByKey(I,false)do local O="https://api.github.com/repos/"local P="/git/trees/master"local Q="?recursive=1"print("    >> Checking repository: "..N)local S=O..N..P..Q;local T=c.getPrimary("internet")local U=f:new(T,S)if U:connect()==true then local V=''local W=nil;local X={}for Y in U:getData()do V=V..Y end;U:disconnect()W=g:new()X=W:parse(V)for Z=1,#X["tree"]do if X["tree"][Z]["path"]==K then S=X["tree"][Z]["url"]U=f:new(T,S)if U:connect()==true then V=''X={}for Y in U:getData()do V=V..Y end;U:disconnect()X=W:parse(V)if#X["tree"]==2 and X["tree"][1]["path"]=="_bin"and X["tree"][2]["path"]=="_config"then local a7="https://raw.githubusercontent.com/"local a8="/_config/package.info"local a9="/master/"S=a7 ..N..a9 ..K..a8;U=f:new(T,S)if U:connect()==true then local aa=''local ab={}for Y in U:getData()do aa=aa..Y end;local ac="/aquaver.github.io/xaf-framework/package.info"local ad=e.open(ac,'w')ad:write(aa)ad:close()ab=k:loadFromFile(ac)e.remove(ac)if ab["package-description"]and ab["package-identifier"]and ab["package-index"]and ab["package-owner"]and ab["package-title"]and ab["package-version"]and ab["package-xaf"]then if B==ab["package-identifier"]then print("      >> Successfully found information data of package: "..K)print("      >> This package exists on repository: "..N)print("        >> Package title: "..ab["package-title"])print("        >> Package owner: "..ab["package-owner"])print("        >> Package version: "..ab["package-version"])print("        >> Package required XAF version: "..ab["package-xaf"])print(string.rep('-',o))print(ab["package-description"])os.exit()else print("      >> Package identifier mismatch detected")print("      >> Identifier from configuration file and package directory name must be equal")print("      >> This package cannot be installed")end else print("      >> Invalid package description file detected")print("      >> If this message appears again, contact the package owner")end else print("      >> Cannot retrieve package description file")print("      >> Ensure you have not lost internet access")end else print("      >> Invalid XAF PM package structure")print("      >> Encountered unexpected files in package master directory")print("      >> This package cannot be installed")end else print("      >> Cannot connect to package content tree...")print("      >> Ensure you have not lost internet access")end end end else print("      >> Cannot connect to '"..N.."' repository")print("      >> Ensure you have not lost internet access")end;print("      >> Cannot find package '"..K.."' on repository: "..N)end end;os.exit()end;print("--------------------------------------")print("-- XAF Package Manager - Controller --")print("--------------------------------------")print("  >> Add-on package management program")print("  >> Use 'xaf-pm package [-h | --help]' for command manual")
