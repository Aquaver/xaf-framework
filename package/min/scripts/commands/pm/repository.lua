local a,b=...local c=require("component")local d=require("filesystem")local e=require("xaf/utility/httpstream")local f=require("xaf/core/xafcore")local g=f:getMathInstance()local h=f:getTableInstance()local i=c.getPrimary("gpu")local j,k=i.getResolution()if b.h==true or b.help==true then print("----------------------------------")print("-- XAF Package Manager - Manual --")print("----------------------------------")print("  >> NAME")print("    >> xaf-pm repository - Source repository management program")print()print("  >> SYNOPSIS")print("    >> xaf-pm repository")print("    >> xaf-pm repository [-a | --add] <identifier> [priority]")print("    >> xaf-pm repository [-h | --help]")print("    >> xaf-pm repository [-i | --info] <identifier>")print("    >> xaf-pm repository [-l | --list] [page]")print("    >> xaf-pm repository [-p | --priority] <index> <priority>")print("    >> xaf-pm repository [-r | --remove] <index>")print()print("  >> DESCRIPTION")print("    >> This script let the user manage XAF PM add-on package source repositories.")os.exit()end;if b.l==true or b.list==true or b.p==true or b.priority==true or b.r==true or b.remove==true then local l="aquaver.github.io"local m="xaf-framework"local n="data"local o="pm-source.info"local p=d.concat(l,m,n,o)local q={}if d.exists(p)==true then q=h:loadFromFile(p)else print("--------------------------------------")print("-- XAF Package Manager - Controller --")print("--------------------------------------")print("  >> Cannot find the source repositories list file")print("  >> Reinstall XAF package or download this file manually")print("  >> Missing file name: "..o)os.exit()end;if b.l==true or b.list==true then local r=#q;local s=a[1]local t=0;if s==nil then t=1 elseif tonumber(s)==nil then print("--------------------------------------")print("-- XAF Package Manager - Controller --")print("--------------------------------------")print("  >> Invalid repository list index value")print("  >> This value must be natural number (or empty as 1)")print("  >> Use 'xaf-pm repository [-l | --list]' again with proper index")os.exit()else if g:checkNatural(tonumber(s),true)==false then print("--------------------------------------")print("-- XAF Package Manager - Controller --")print("--------------------------------------")print("  >> Invalid repository list index value")print("  >> This value must be natural number (or empty as 1)")print("  >> Use 'xaf-pm repository [-l | --list]' again with proper index")os.exit()else t=tonumber(s)end end;print("--------------------------------------")print("-- XAF Package Manager - Controller --")print("--------------------------------------")print("  >> Retrieving source repository list")if q["default"]==nil then print("  >> Default repository not found")else print("  >> Default repository: "..q["default"])end;for u=(t-1)*10+1,(t-1)*10+10 do if q[u]then print("    >> ["..u.."] "..q[u])else break end end;if q[(t-1)*10+11]then print("  >> More repositories on 'xaf-pm repository [-l | --list] "..t+1 .."'")end elseif b.p==true or b.priority==true then local r=#q;local s=a[1]local t=0;local v=a[2]local w=0;if tonumber(s)==nil then print("--------------------------------------")print("-- XAF Package Manager - Controller --")print("--------------------------------------")print("  >> Invalid repository index value")print("  >> This value must be natural number (up to: "..r..')')print("  >> Use 'xaf-pm repository [-p | --priority]' again with proper index")os.exit()else if g:checkNatural(tonumber(s),true)==false or tonumber(s)>r then print("--------------------------------------")print("-- XAF Package Manager - Controller --")print("--------------------------------------")print("  >> Invalid repository index value")print("  >> This value must be natural number (up to: "..r..')')print("  >> Use 'xaf-pm repository [-p | --priority]' again with proper index")os.exit()else t=tonumber(s)end end;if tonumber(v)==nil then print("--------------------------------------")print("-- XAF Package Manager - Controller --")print("--------------------------------------")print("  >> Invalid repository new priority value")print("  >> This value must be natural number (up to: "..r..')')print("  >> Use 'xaf-pm repository [-p | --priority]' again with proper priority value")os.exit()else if g:checkNatural(tonumber(v),true)==false or tonumber(s)>r then print("--------------------------------------")print("-- XAF Package Manager - Controller --")print("--------------------------------------")print("  >> Invalid repository new priority value")print("  >> This value must be natural number (up to: "..r..')')print("  >> Use 'xaf-pm repository [-p | --priority]' again with proper priority value")os.exit()else w=tonumber(v)end end;local x=d.open(p,'w')local y=table.remove(q,t)x:write("[#] Extensible Application Framework Package Manager source repository list."..'\n')x:write("[#] This file is used to store user added custom XAF add-on package repositories."..'\n')x:write("[#] Data represented in XAF Table Format."..'\n'..'\n')x:close()table.insert(q,w,y)h:saveToFile(q,p,true)print("--------------------------------------")print("-- XAF Package Manager - Controller --")print("--------------------------------------")print("  >> Successfully changed priority of repository: "..y)print("  >> It is available now under index '"..w.."' instead of '"..t.."'")elseif b.r==true or b.remove==true then local r=#q;local s=a[1]local t=0;if tonumber(s)==nil then print("--------------------------------------")print("-- XAF Package Manager - Controller --")print("--------------------------------------")print("  >> Invalid repository removal index value")print("  >> This value must be natural number (up to: "..r..')')print("  >> Use 'xaf-pm repository [-r | --remove]' again with proper index")os.exit()else if g:checkNatural(tonumber(s),true)==false or tonumber(s)>r then print("--------------------------------------")print("-- XAF Package Manager - Controller --")print("--------------------------------------")print("  >> Invalid repository removal index value")print("  >> This value must be natural number (up to: "..r..')')print("  >> Use 'xaf-pm repository [-r | --remove]' again with proper index")os.exit()else t=tonumber(s)end;local x=d.open(p,'w')local y=table.remove(q,t)x:write("[#] Extensible Application Framework Package Manager source repository list."..'\n')x:write("[#] This file is used to store user added custom XAF add-on package repositories."..'\n')x:write("[#] Data represented in XAF Table Format."..'\n'..'\n')x:close()h:saveToFile(q,p,true)print("--------------------------------------")print("-- XAF Package Manager - Controller --")print("--------------------------------------")print("  >> Successfully removed following repository: "..y)print("  >> Package Manager will no longer install add-ons from it")end end;os.exit()end;if b.a==true or b.add==true or b.i==true or b.info==true then if c.isAvailable("internet")==false then print("--------------------------------------")print("-- XAF Package Manager - Controller --")print("--------------------------------------")print("  >> Internet card component is not available")print("  >> Package Manager cannot connect to target repository")os.exit()else print("--------------------------------------")print("-- XAF Package Manager - Controller --")print("--------------------------------------")print("  >> Internet card component found")print("  >> Trying to connect to target repository...")end;local z="https://raw.githubusercontent.com/"local A=a[1]local B=a[2]local C="/master/_config/repository.info"if b.a==true or b.add==true then if A==nil then print("    >> Invalid target repository identifier, must not be empty")print("    >> Required format: userName/repositoryName")os.exit()end;local D=z..A..C;local E=c.getPrimary("internet")local F=e:new(E,D)local G=0;if F:connect()==true then local H=''for I in F:getData()do H=H..I end;G=F:getResponseCode()F:disconnect()E=nil;if G==404 then print("    >> Target repository does not exist on GitHub service")print("    >> Ensure you entered valid repository identifier")print("    >> Required format: userName/repositoryName")os.exit()else local J="/aquaver.github.io/xaf-framework/repository.info"local K=d.open(J,'w')local L=nil;K:write(H)K:close()L=h:loadFromFile(J)d.remove(J)if L["repository-description"]and L["repository-owner"]and L["repository-title"]and L["repository-xaf"]then local l="aquaver.github.io"local m="xaf-framework"local n="data"local o="pm-source.info"local p=d.concat(l,m,n,o)local q={}local M=0;if d.exists(p)==true then q=h:loadFromFile(p)M=#q else print("    >> Cannot find the source repositories list file")print("    >> Reinstall XAF package or download this file manually")print("    >> Missing file name: "..o)os.exit()end;if B==nil then B=1;table.insert(q,1,A)elseif tonumber(B)==nil then print("    >> Invalid new repository priority value")print("    >> This value must be natural number (up to: "..M+1 ..')')print("    >> Use 'xaf-pm repository [-a | --add]' again with proper priority value")os.exit()else if g:checkNatural(tonumber(B),true)==false or tonumber(B)>M+1 then print("    >> Invalid new repository priority value")print("    >> This value must be natural number (up to: "..M+1 ..')')print("    >> Use 'xaf-pm repository [-a | --add]' again with proper priority value")os.exit()else table.insert(q,tonumber(B),A)end end;local x=d.open(p,'w')local N=A;x:write("[#] Extensible Application Framework Package Manager source repository list."..'\n')x:write("[#] This file is used to store user added custom XAF add-on package repositories."..'\n')x:write("[#] Data represented in XAF Table Format."..'\n'..'\n')x:close()h:saveToFile(q,p,true)print("    >> Successfully added following repository: "..N)print("    >> Package Manager will install programs from it with '"..B.."' priority")else print("    >> Invalid repository description file detected")print("    >> Try running 'xaf-pm repository [-a | --add]' again")print("    >> If this message appears again, contact the repository owner")os.exit()end end else print("    >> Cannot connect to target repository")print("    >> Try running 'xaf-pm repository [-a | --add]' again")os.exit()end elseif b.i==true or b.info==true then if A==nil then print("    >> Invalid target repository identifier, must not be empty")print("    >> Required format: userName/repositoryName")os.exit()end;local D=z..A..C;local E=c.getPrimary("internet")local F=e:new(E,D)local G=0;if F:connect()==true then local H=''for I in F:getData()do H=H..I end;G=F:getResponseCode()F:disconnect()E=nil;if G==404 then print("    >> Target repository does not exist on GitHub service")print("    >> Ensure you entered valid repository identifier")print("    >> Required format: userName/repositoryName")os.exit()else local J="/aquaver.github.io/xaf-framework/repository.info"local K=d.open(J,'w')local L=nil;K:write(H)K:close()L=h:loadFromFile(J)d.remove(J)if L["repository-description"]and L["repository-owner"]and L["repository-title"]and L["repository-xaf"]then print("  >> Successfully connected to target repository:")print("    >> Repository title: "..L["repository-title"])print("    >> Repository owner: "..L["repository-owner"])print("    >> Repository required XAF version: "..L["repository-xaf"])print(string.rep('-',j))print(L["repository-description"])else print("    >> Invalid repository description file detected")print("    >> Try running 'xaf-pm repository [-i | --info]' again")print("    >> If this message appears again, contact the repository owner")end end else print("    >> Cannot connect to target repository")print("    >> Try running 'xaf-pm repository [-i | --info]' again")os.exit()end end;os.exit()end;print("--------------------------------------")print("-- XAF Package Manager - Controller --")print("--------------------------------------")print("  >> Source repository management program")print("  >> Use 'xaf-pm repository [-h | --help]' for command manual")
