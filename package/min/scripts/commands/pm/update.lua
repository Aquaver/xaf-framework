local a,b=...local c=require("component")local d=require("event")local e=require("filesystem")local f=require("xaf/utility/httpstream")local g=require("xaf/utility/jsonparser")local h=require("unicode")local i=require("xaf/core/xafcore")local j=i:getTableInstance()local k=_G._XAF;local l=k and k._VERSION or''if b.h==true or b.help==true then print("----------------------------------")print("-- XAF Package Manager - Manual --")print("----------------------------------")print("  >> NAME")print("    >> xaf-pm update - Package updating program")print()print("  >> SYNOPSIS")print("    >> xaf-pm update")print("    >> xaf-pm update [-h | --help]")print("    >> xaf-pm update [-p | --package] <identifier>")print()print("  >> DESCRIPTION")print("    >> This script is designed to perform automatic download an update from original package source repository and installing it.")end;if b.p==true or b.package==true then local m="io.github.aquaver"local n="xaf-framework"local o="xaf-packages"local p="data"local q="pm-update.info"local r=a[1]local s=tostring(a[1])local t=nil;local u=''local v=''local w=0;local x=0;local y=''local z=''local A=''if r==nil or s==''then print("--------------------------------------")print("-- XAF Package Manager - Controller --")print("--------------------------------------")print("  >> Invalid package name for updating")print("  >> Use 'xaf-pm update [-p | --package]' again with proper package name")os.exit()else u=e.concat(m,n,p,q)v=e.concat(m,o,s)end;if e.exists(u)==false then print("--------------------------------------")print("-- XAF Package Manager - Controller --")print("--------------------------------------")print("  >> Cannot continue updating procedure")print("  >> Unable to find package source list file")print("  >> Missing file name: "..q)os.exit()else t=j:loadFromFile(u)end;if e.exists(v)==false then print("--------------------------------------")print("-- XAF Package Manager - Controller --")print("--------------------------------------")print("  >> Package with entered name does not exist")print("  >> Use 'xaf-pm update [-p | --package]' again with proper name")os.exit()else if t[s]==nil then print("--------------------------------------")print("-- XAF Package Manager - Controller --")print("--------------------------------------")print("  >> Unable to find package identifier in update data file")print("  >> Despite this it exists in XAF PM packages directory")print("  >> Try removing this package and installing it again")os.exit()else A=t[s]x=string.find(A,":")y=string.sub(A,x+1,-1)z=string.sub(A,1,x-1)end;if c.isAvailable("internet")==false then print("--------------------------------------")print("-- XAF Package Manager - Controller --")print("--------------------------------------")print("  >> Internet card component is not available")print("  >> Package Manager cannot connect to target repository")os.exit()else print("--------------------------------------")print("-- XAF Package Manager - Controller --")print("--------------------------------------")print("  >> Internet card component found")print("  >> Trying to connect to target repository...")end;local B="https://api.github.com/repos/"local C="/git/trees/master"local D="?recursive=1"local E=false;print("    >> Searching for package '"..s.."' in category: "..y)print("    >> Package source repository: "..z)local F=B..z..C..D;local G=c.getPrimary("internet")local H=f:new(G,F)H:setMaxTimeout(0.5)if H:connect()==true then local I=''local J=nil;local K={}for L in H:getData()do I=I..L end;H:disconnect()J=g:new()K=J:parse(I)for M=1,#K["tree"]do if K["tree"][M]["path"]==y..'/'..s then print("      >> Package found")print("      >> Retrieving package data")E=true;sourceAddress=K["tree"][M]["url"]F=K["tree"][M]["url"]H=f:new(G,F)H:setMaxTimeout(0.5)if H:connect()==true then I=''K={}for L in H:getData()do I=I..L end;H:disconnect()K=J:parse(I)if#K["tree"]==2 and K["tree"][1]["path"]=="_bin"and K["tree"][2]["path"]=="_config"then local N="https://raw.githubusercontent.com/"local O="_config/repository.info"local P="/master/"F=N..z..P..O;H=f:new(G,F)H:setMaxTimeout(0.5)if H:connect()==true then local Q=''local R={}for L in H:getData()do Q=Q..L end;R=j:loadFromString(Q)Q=''if l>R["repository-xaf"]then local S="https://raw.githubusercontent.com/"local T="/_config/package.info"local U="/master/"F=S..z..U..y..'/'..s..T;H=f:new(G,F)H:setMaxTimeout(0.5)if H:connect()==true then local V=''local W={}for L in H:getData()do V=V..L end;W=j:loadFromString(V)V=''if W["package-description"]and W["package-identifier"]and W["package-index"]and W["package-owner"]and W["package-title"]and W["package-version"]and W["package-xaf"]then if s==W["package-identifier"]then if l>W["package-xaf"]then print("        >> Updating package '"..s.."' from source repository: "..z)print("        >> All prerequisites have been checked")print("        >> Starting update downloading procedure...")F=sourceAddress..D;H=f:new(G,F)H:setMaxTimeout(0.5)if H:connect()==true then I=''K={}for L in H:getData()do I=I..L end;H:disconnect()K=J:parse(I)for X=1,#K["tree"]do local Y=K["tree"][X]["path"]local Z=K["tree"][X]["type"]local m="io.github.aquaver"local n="xaf-packages"if Z=="tree"then e.makeDirectory(e.concat(m,n,r.."_update",Y))elseif Z=="blob"then local _=e.concat(m,n,r.."_update",Y)local a0=nil;local a1=-1;F=S..z..U..y..'/'..s..'/'..Y;H=f:new(G,F)H:setMaxTimeout(0.5)print("          >> Trying to download: "..s..'/'..Y)if H:connect()==true then a0=e.open(_,'w')a1=0;for L in H:getData()do a0:write(L)a1=a1+h.wlen(L)end;w=w+a1;a0:close()print("            >> Downloaded file: "..s..'/'..Y.." ("..string.format("%.2f",a1/1024).." kB)")else print("            >> Cannot download '"..s..'/'..Y.."' file")end end end;print("              >> Successfully downloaded updated version of package '"..s.."' from repository: "..z)print("              >> Downloaded package total size: "..string.format("%.2f",w/1024).." kB")print("              >> Are you sure to install this update?")print("              >> Hit 'Y' to confirm, or 'N' to abort and remove it")print("              >> Warning! It will delete entire current version of package with all its data")while true do local a2={d.pull("key_down")}if a2[3]==89 then local a3=e.concat(m,o,r)local a4=e.concat(m,o,r.."_update")e.remove(a3)e.rename(a4,a3)print("                >> Current version of package has been deleted")print("                >> Successfully installed package update")print("                >> Reboot this machine and initialize XAF to complete updating procedure")print("                >> Updating finished")break elseif a2[3]==78 then local a4=e.concat(m,o,r.."_update")e.remove(a4)print("                >> Updating procedure has been interrupted manually")print("                >> Downloaded updated version of package has been deleted")print("                >> Current package version remain unaffected")break end end;os.exit()else print("          >> Cannot connect to package installation content tree")print("          >> Ensure you have not lost internet access")print("          >> Update downloading procedure has been interrupted")os.exit()end else print("        >> This package update requires newer XAF version ("..W["package-xaf"]..')')print("        >> Detected local API version: "..l)print("        >> Please update XAF via 'xaf update' before package updating")print("        >> Updating procedure has been interrupted")os.exit()end else print("        >> Package identifier mismatch detected")print("        >> Identifier from configuration file and package directory (entered name) must be equal")print("        >> This package cannot be updated")os.exit()end else print("        >> Invalid package description file detected")print("        >> If this message appears again, contact the package owner")print("        >> Updating procedure has been interrupted")os.exit()end else print("        >> Cannot retrieve package description file")print("        >> Ensure you have not lost internet access")print("        >> Updating procedure has been interrupted")os.exit()end else print("        >> Repository '"..z.."' forces requirement to have newer XAF version")print("        >> Detected local API version: "..l.." (required by this repository is: "..R["repository-xaf"]..')')print("        >> Please update XAF via 'xaf update' before updating this package")print("        >> Updating procedure has been interrupted")os.exit()end else print("        >> Cannot retrieve repository description file")print("        >> Ensure you have not lost internet access")print("        >> Updating procedure has been interrupted")os.exit()end else print("        >> Invalid XAF PM package structure")print("        >> Encountered unexpected files in package master directory")print("        >> This package cannot be updated")os.exit()end else print("        >> Cannot connect to package content tree")print("        >> Ensure you have not lost internet access")print("        >> Updating procedure has been interrupted")os.exit()end end end;if E==false then print("      >> Cannot find package '"..s.."' on repository: "..z)print("      >> This package might be removed")print("      >> If this package physically exists, try reinstalling it manually")end else print("      >> Cannot connect to '"..z.."' repository")print("      >> Ensure you have not lost internet access")print("      >> Updating procedure has been interrupted")end end;os.exit()end;print("--------------------------------------")print("-- XAF Package Manager - Controller --")print("--------------------------------------")print("  >> Package updating program")print("  >> Use 'xaf-pm update [-h | --help]' for command manual")
